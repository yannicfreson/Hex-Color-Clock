{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","textColor","backgroundColor","updateTime","bind","today","Date","time","formatTime","getHours","getMinutes","getSeconds","toHex","input","numberAsHex","toString","toUpperCase","output","this","hexAndTimeFormatted","console","log","setState","setInterval","className","style","fontSize","color","whiteSpace","Component","ReactDOM","render","document","getElementById"],"mappings":"yPAqFeA,G,wDAjFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,QACXC,gBAAiB,UAErB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBANH,E,yDAWf,IAAIC,EAAQ,IAAIC,KACZC,EAAOC,EAAWH,EAAMI,YAAc,GAAKD,EAAWH,EAAMK,cAAqBF,EAAWH,EAAMM,cAGtG,SAASC,EAAMC,GACX,IAAIC,EAAcD,EAAME,SAAS,IAAIC,cAIrC,OAHIH,EAAQ,KACRC,EAAc,IAAMA,GAEjBA,EAGX,IAAIZ,EACAU,EAAMP,EAAMI,YACZG,EAAMP,EAAMK,cACZE,EAAMP,EAAMM,cAGhB,SAASH,EAAWK,GAChB,IAAII,EAASJ,EAIb,OAHIA,EAAQ,KACRI,EAAS,IAAMJ,GAEZI,EAIY,KAAnBZ,EAAMI,WAA0C,KAArBJ,EAAMK,aAA4C,KAArBL,EAAMM,aAAuB,MACrFO,KAAKjB,UAAY,SAIrB,IAAIkB,EAAsBjB,EAAkB,KAAOK,EACnDa,QAAQC,IAAIF,GAGZD,KAAKI,SAAS,CACVpB,kBACAK,OACAY,wBAEJC,QAAQC,IAAI,cACZD,QAAQC,IAAI,kBAAmBnB,K,0CAI/BgB,KAAKf,aACLoB,YAAYL,KAAKf,WAAY,O,+BAI7B,IAAMD,EAAkBgB,KAAKlB,MAAME,gBAC7BD,EAAYiB,KAAKlB,MAAMC,UACvBkB,EAAsBD,KAAKlB,MAAMmB,oBACvC,OACI,yBACIK,UAAU,OACVC,MAAO,CACHC,SAAU,OACVC,MAAO1B,EACPC,gBAAiB,IAAMA,EACvB0B,WAAY,aAGfT,O,GA5ECU,cCElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.20137ea6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textColor: \"white\",\n            backgroundColor: \"000000\"\n        };\n        this.updateTime = this.updateTime.bind(this);\n    }\n\n    updateTime() {\n        // huidige tijd\n        let today = new Date();\n        let time = formatTime(today.getHours()) + \"\" + formatTime(today.getMinutes()) + \"\" + formatTime(today.getSeconds());\n\n        // tijd omzetten naar hex\n        function toHex(input) {\n            let numberAsHex = input.toString(16).toUpperCase();\n            if (input < 16) {\n                numberAsHex = \"0\" + numberAsHex;\n            }\n            return numberAsHex;\n        }\n\n        let backgroundColor =\n            toHex(today.getHours()) +\n            toHex(today.getMinutes()) +\n            toHex(today.getSeconds());\n\n        //prefix tijd met 0\n        function formatTime(input) {\n            let output = input;\n            if (input < 10) {\n                output = \"0\" + input;\n            }\n            return output;\n        }\n\n        // contrast berekenen text en backgroundcolor\n        if (today.getHours() * 0.299 + today.getMinutes() * 0.587 + today.getSeconds() * 0.114 > 186) {\n            this.textColor = \"black\";\n        }\n\n        //concatenate strings for output\n        let hexAndTimeFormatted = backgroundColor + \"\\n\" + time;\n        console.log(hexAndTimeFormatted);\n\n        // state zetten\n        this.setState({\n            backgroundColor,\n            time,\n            hexAndTimeFormatted\n        });\n        console.log(\"updateTime\");\n        console.log(\"backgroundColor\", backgroundColor);\n    }\n\n    componentDidMount() {\n        this.updateTime();\n        setInterval(this.updateTime, 1000);\n    }\n\n    render() {\n        const backgroundColor = this.state.backgroundColor;\n        const textColor = this.state.textColor;\n        const hexAndTimeFormatted = this.state.hexAndTimeFormatted;\n        return (\n            <div\n                className=\"root\"\n                style={{\n                    fontSize: \"15vh\",\n                    color: textColor,\n                    backgroundColor: \"#\" + backgroundColor,\n                    whiteSpace: 'pre-wrap'\n                }}\n            >\n                {hexAndTimeFormatted}\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}